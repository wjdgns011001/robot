int state = 800;//주변의 빛 세기
int count = 0;//레이저에 맞은 수
int j=0;//세그먼트를 위한 변수
     
const int BUZ = 11;//부저의 핀 번호
     
// notes in the melody:
int melody[] = { 
  1568, 2637,1568,
  3520,  2794, 1568,
  2637, 2093,
  2349, 1976
};
     
// note durations: 4 = quarter note, 8 = eighth note, etc.:
int noteDurations[] = {
   2, 2, 2, 2,2,2
};
#include <Servo.h>
Servo myservo;
     
int segmentLEDs[]={2,3,4,5,6,7,8,9};//세그먼트 핀번호
int segmentLEDsNum = 8;
int digitForNum[10][8]={//세그먼트 넘버
  {0,0,0,0,0,0,1,1},//0
  {1,0,0,1,1,1,1,1},//1
  {0,0,1,0,0,1,0,1},//2
  {0,0,0,0,1,1,0,1},//3
  {1,0,0,1,1,0,0,1},//4
  {0,1,0,0,1,0,0,1},//5
  {0,1,0,0,0,0,0,1},//6
  {0,0,0,1,1,1,1,1},//7
  {0,0,0,0,0,0,0,1},//8
  {0,0,0,0,1,0,0,1}//9
  };
void setup() {
pinMode(BUZ,OUTPUT);//부저 아웃풋
pinMode(segmentLEDs[0],OUTPUT);
pinMode(segmentLEDs[1],OUTPUT);
pinMode(segmentLEDs[2],OUTPUT);
pinMode(segmentLEDs[3],OUTPUT);
pinMode(segmentLEDs[4],OUTPUT);
pinMode(segmentLEDs[5],OUTPUT);
pinMode(segmentLEDs[6],OUTPUT);
pinMode(segmentLEDs[7],OUTPUT);
digitalWrite(segmentLEDs[6],LOW);
     
myservo.attach(13);
Serial.begin(9600);
}
     
void loop(){
     
  if(count==0){   //count is 0
    for(j=0;j<segmentLEDsNum;j++){
    digitalWrite(segmentLEDs[j],digitForNum[count][j]); 
  } 
  count++;
  }
  int val_0 = analogRead(A0);
  int val_1 = analogRead(A1);
  
  Serial.println(val_0);//빛센서
  Serial.println(val_1-150);
  
  if(val_0>state || val_1-150 > state){ //빛센서가 받은 값(val)이 주변 빛세기(state)보다 클경우 -x를 한 이유는 센서마다 인식하는 세기가 달라서
    for(j=0;j<segmentLEDsNum;j++){
    digitalWrite(segmentLEDs[j],digitForNum[count][j]);
     
    
  }//for문 끝
  count++;
  
  digitalWrite(BUZ,HIGH);
  delay(600);
  digitalWrite(BUZ,LOW);
    
  if(count==10){   //full score
    count=0;
    
    for (int thisNote = 0; thisNote < 6; thisNote++) {
     
    // to calculate the note duration, take one second divided by the note type.
    //e.g. quarter note = 1000 / 4, eighth note = 1000/8, etc.
    int noteDuration = 1000 / noteDurations[thisNote];
    tone(11, melody[thisNote], noteDuration);
     
    // to distinguish the notes, set a minimum time between them.
    // the note's duration + 30% seems to work well:
    int pauseBetweenNotes = noteDuration * 1.30;
    delay(pauseBetweenNotes);
    // stop the tone playing:
    noTone(11);
  }
     
    delay(10000);
    
    }
  }//if문 끝
  Serial.println(count);
 
 if(val_0%2==0){  //빛을 감지함에 따라 모터가 달리 회전한다.
myservo.write((val_0%10)*10); // Make servo go to 0 degrees
delay(300);
}
else{
myservo.write(160-(val_0%10)*10);
delay(300);
}
}
